console.log("кот" > "код"); // true Так как "т" больше "д", У "кот" третий символ — "т", а у "код" — "д". В Unicode "т" (код 1090) больше "д" (код 1076).
console.log("2" + 2 * "2"); // 24 по правилам математик сначала умножил 2 на строку с текстом 2 определил это как умножение потом строку с 2 сконкатенировал 4
console.log(undefined == null); // true потому что идет нестрогое сравнение и выполняется приведение типов перед сравнением и в этом процессе undefined(переменная указана но не инициализированна ) и null(пустое  место) считаются равными
console.log(undefined != null); // false таже причина что и в примере выше проверка на равенство даст такой ответ так как они равны
console.log(null == 0); // false так как идет не строгое сравнение и null не приводится к числовым значениям. К числовым значениям null приводится при сравнение с undefined
console.log(2 > "3"); // false строка "3" преобразуется в число 3 а так как 2 меньше 3 js что это не правда
console.log(null - false + true); //  1 так как null при приведение к числу равен 0 false при приведение к числу тоже 0 true при приведение к числу равен 1 получаем 0 + 0 + 1
console.log(1 / "l"); // NaN 1 нельзя разделить на строку с буквой L js не может это посчитать выдаёт значение NaN не число
console.log("2" * "3"); // 6 строки определились как цифры и перемножились
console.log(4 + 5 + "O"); // 9O сначала сложили 4 и 5 потом сконкатенировали со строкой о
console.log("l" + 4 + 5); //  l45 буква в строке не определилась как число или цифра поэтому она сконкатенировалась с 4 а потом это значение сконкатенировалось с 5
console.log("4" - 2); // 2 строка 4 определилась как цифра 4 и ее разделили на 2
console.log("4" - "4x"); // NaN не число так как 4х не может определиться как число
console.log("23" == 23); // true тут не строгое сравнение поэтому равны строку 23 определяет как число 23
console.log(null == false); // false это связано с тем, что null не эквивалентен false по правилам неявного преобразования типов лож не может быть пустотой??? так же как и пустота не может быть правдой??? Просто нельзя сравнивать.
console.log(" -4 " / 0 + 1); // Infinity так как " -4 " преобразуется в число -4 делим его на 0 и получаем бесконечность добавляем к бесконечности 1 и все равно получаем бесконечность такак любое число сложенное с бесконечностью остается бесконечностью
console.log(null + 1); // 1 так как идет сложение и null приводится к 0 и мы получаем выражение 0 + 1
console.log(1 === "1"); // false тут строгое сравнение где цифра 1 не равна строке с цифрой 1
console.log("2" > 10); // false строка "2" преобразуется в число 2 а так как 2 меньше 10 js говорит что это не правда
console.log(NaN == undefined); // false не правда что не число (которе может получится в результате деления на 0) будет равно пустой переменной (переменной которую создали но еще не присвоили значение)
